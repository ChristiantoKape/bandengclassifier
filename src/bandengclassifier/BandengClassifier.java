package bandengclassifier;

import bandengproses.ArrayDataTiapFitur;
import bandengproses.ProsesData;
import bandengproses.ProsesGambar;
import bandengproses.ArrayDataPosterior;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import java.util.*;
import java.text.*;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.plaf.metal.MetalLookAndFeel;
import javax.swing.plaf.metal.OceanTheme;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author X-Tech & Java Free Code
 */
public class BandengClassifier extends javax.swing.JFrame {

    ProsesGambar testingImage = null;
    final ProsesData dataPro = new ProsesData();

    public ArrayList<Double> arraySuegar = new ArrayList<>();
    public ArrayList<Double> arrayTidakSuegar = new ArrayList<>();
    
    JFileChooser fc;
    File file;

    /**
     * Creates new form NaiveBayesClassifier
     */
    public BandengClassifier() {

        try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
            MetalLookAndFeel.setCurrentTheme(new OceanTheme());
            UIManager.setLookAndFeel(new MetalLookAndFeel());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(BandengClassifier.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        BandengClassifier.setDefaultLookAndFeelDecorated(Boolean.TRUE);
        
        testingImage = new ProsesGambar();

        // set icon
        this.setIconImage(this.getToolkit().createImage("citrus-icon.png"));

        initComponents();
        fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);        
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jButtonTesting = new javax.swing.JButton();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabelImageTraining = new javax.swing.JLabel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLabelImageTesting = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButtonTraining = new javax.swing.JButton();
        jTextField1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDataset = new javax.swing.JTable();
        jLabelProsesTraining = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelDetailImageTraining = new javax.swing.JLabel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jLabelImageGrayTraining = new javax.swing.JLabel();
        jLayeredPane7 = new javax.swing.JLayeredPane();
        jPanel4 = new javax.swing.JPanel();
        jLabelDetailImageTesting = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldvar_mean_Red_Testing = new javax.swing.JTextField();
        jTextFieldvar_mean_Green_Testing = new javax.swing.JTextField();
        jTextFieldvar_mean_Blue_Testing = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldactual_class_Testing = new javax.swing.JTextField();
        jLabelProsesTesting = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldposterior_Class_jn = new javax.swing.JTextField();
        jTextFieldposterior_Class_jl = new javax.swing.JTextField();
        jTextFieldpredicted_class_Testing = new javax.swing.JTextField();
        jLabelImageGrayTesting = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Klasifikasi Kesegaran ikan Bandeng");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(200, 50, 0, 0));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonTesting.setText("Testing Data");
        jButtonTesting.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonTesting.setEnabled(false);
        jButtonTesting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonTestingMouseClicked(evt);
            }
        });
        jButtonTesting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTestingActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonTesting);
        jButtonTesting.setBounds(500, 250, 110, 30);

        jLayeredPane2.setBackground(new java.awt.Color(0, 0, 0));
        jLayeredPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));

        jLabelImageTraining.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImageTraining.setText("ImageTraining");
        jLabelImageTraining.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jLayeredPane2.add(jLabelImageTraining);
        jLabelImageTraining.setBounds(10, 10, 220, 210);

        jLayeredPane1.add(jLayeredPane2);
        jLayeredPane2.setBounds(20, 50, 240, 230);

        jLayeredPane3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        jLayeredPane3.setToolTipText("");
        jLayeredPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabelImageTesting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImageTesting.setText("ImageTesting");
        jLayeredPane3.add(jLabelImageTesting);
        jLabelImageTesting.setBounds(10, 10, 220, 210);

        jLayeredPane1.add(jLayeredPane3);
        jLayeredPane3.setBounds(710, 50, 240, 230);

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton3);
        jButton3.setBounds(430, 10, 110, 30);

        jButtonTraining.setText("Training Data");
        jButtonTraining.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonTrainingMouseClicked(evt);
            }
        });
        jButtonTraining.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTrainingActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonTraining);
        jButtonTraining.setBounds(360, 250, 110, 30);
        jLayeredPane1.add(jTextField1);
        jTextField1.setBounds(60, 20, 180, 0);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dataset Citrus"));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTableDataset.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Red", "Green", "Blue", "Kelas"
            }
        ));
        jScrollPane1.setViewportView(jTableDataset);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
        );

        jLayeredPane1.add(jPanel2);
        jPanel2.setBounds(20, 350, 500, 170);
        jPanel2.getAccessibleContext().setAccessibleName("Dataset Jeruk");

        jLabelProsesTraining.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelProsesTraining.setText("Image Training : ");
        jLayeredPane1.add(jLabelProsesTraining);
        jLabelProsesTraining.setBounds(30, 20, 220, 15);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail Image Training"));

        jLabelDetailImageTraining.setText("Size Image :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDetailImageTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabelDetailImageTraining)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        jLayeredPane1.add(jPanel3);
        jPanel3.setBounds(20, 290, 240, 40);

        jLayeredPane4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));

        jLabelImageGrayTraining.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImageGrayTraining.setText("Gray Training");
        jLayeredPane4.add(jLabelImageGrayTraining);
        jLabelImageGrayTraining.setBounds(10, 10, 180, 170);

        jLayeredPane1.add(jLayeredPane4);
        jLayeredPane4.setBounds(270, 50, 200, 190);

        jLayeredPane7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        jLayeredPane1.add(jLayeredPane7);
        jLayeredPane7.setBounds(500, 50, 200, 190);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail Image Testing"));

        jLabelDetailImageTesting.setText("Size Image :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDetailImageTesting, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabelDetailImageTesting)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        jLayeredPane1.add(jPanel4);
        jPanel4.setBounds(710, 290, 240, 40);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mean R");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLayeredPane1.add(jLabel1);
        jLabel1.setBounds(540, 360, 50, 15);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Mean G");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLayeredPane1.add(jLabel2);
        jLabel2.setBounds(640, 360, 50, 15);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Mean B");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLayeredPane1.add(jLabel3);
        jLabel3.setBounds(740, 360, 50, 15);

        jTextFieldvar_mean_Red_Testing.setEditable(false);
        jTextFieldvar_mean_Red_Testing.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jLayeredPane1.add(jTextFieldvar_mean_Red_Testing);
        jTextFieldvar_mean_Red_Testing.setBounds(530, 380, 80, 25);

        jTextFieldvar_mean_Green_Testing.setEditable(false);
        jTextFieldvar_mean_Green_Testing.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldvar_mean_Green_Testing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldvar_mean_Green_TestingActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jTextFieldvar_mean_Green_Testing);
        jTextFieldvar_mean_Green_Testing.setBounds(630, 380, 70, 25);

        jTextFieldvar_mean_Blue_Testing.setEditable(false);
        jTextFieldvar_mean_Blue_Testing.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldvar_mean_Blue_Testing.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldvar_mean_Blue_Testing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldvar_mean_Blue_TestingActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jTextFieldvar_mean_Blue_Testing);
        jTextFieldvar_mean_Blue_Testing.setBounds(730, 380, 70, 25);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Human Perception");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLayeredPane1.add(jLabel8);
        jLabel8.setBounds(830, 360, 110, 15);

        jTextFieldactual_class_Testing.setEditable(false);
        jTextFieldactual_class_Testing.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldactual_class_Testing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldactual_class_TestingActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jTextFieldactual_class_Testing);
        jTextFieldactual_class_Testing.setBounds(820, 380, 130, 25);

        jLabelProsesTesting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelProsesTesting.setText("Image Testing");
        jLayeredPane1.add(jLabelProsesTesting);
        jLabelProsesTesting.setBounds(720, 20, 220, 15);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Compute Probability Posterior"));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("P(Class = Segar | X) =");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("P(Class = Tidak Segar | X) =");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Result Classification :");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldpredicted_class_Testing, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldposterior_Class_jl, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldposterior_Class_jn, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldposterior_Class_jn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldposterior_Class_jl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldpredicted_class_Testing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)))
        );

        jLayeredPane1.add(jPanel5);
        jPanel5.setBounds(530, 410, 420, 110);

        jLabelImageGrayTesting.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImageGrayTesting.setText("Gray Testing");
        jLayeredPane1.add(jLabelImageGrayTesting);
        jLabelImageGrayTesting.setBounds(510, 60, 180, 170);

        jLabel6.setText("Christianto Kurniawan Priyono");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 974, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(65, 65, 65))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButtonTestingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTestingActionPerformed
// TODO add your handling code here:
   
}//GEN-LAST:event_jButtonTestingActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
    jTextField1.setText("");

    jLabelImageTesting.setIcon(null);
    jLabelImageTesting.setText("ImageTesting");
    jLabelImageGrayTesting.setIcon(null);
    jLabelImageGrayTesting.setText("GrayTesting");
    
    jLabelDetailImageTesting.setText("");
    
    jTextFieldvar_mean_Red_Testing.setText("");
    jTextFieldvar_mean_Blue_Testing.setText("");
    jTextFieldvar_mean_Green_Testing.setText("");
    jTextFieldactual_class_Testing.setText("");

    arraySuegar.clear();
    arrayTidakSuegar.clear();
    
    jTextFieldposterior_Class_jl.setText("");
    jTextFieldposterior_Class_jn.setText("");
    jTextFieldpredicted_class_Testing.setText("");
    
    File fildel = new File("sample.jpg");
    fildel.delete();
    jButtonTesting.setEnabled(true);
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonTrainingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTrainingActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jButtonTrainingActionPerformed

    private void jButtonTrainingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTrainingMouseClicked
        // TODO add your handling code here:
        //Set path untuk lokasi folder data training        
//        final String path = "/home/kape/NetBeansProjects/BandengClassifier_1/Gambar/test";
//        final String path = "/home/kape/NetBeansProjects/BandengClassifier_1/Gambar/25";
//        final String path = "/home/kape/NetBeansProjects/BandengClassifier_1/Gambar/30";
        final String path = "/home/kape/NetBeansProjects/BandengClassifier_1/Gambar/50";
//        final String path = "/home/kape/NetBeansProjects/BandengClassifier_1/Gambar/75";
//        final String path = "/home/kape/NetBeansProjects/BandengClassifier_1/Gambar/100";
//        final String path = "/home/kape/NetBeansProjects/BandengClassifier_1/Gambar/Data Training";
        int byk_kolom = 5;

        // Create objek table model
        final DefaultTableModel datasetTableModel =
                (DefaultTableModel) jTableDataset.getModel();

        // Set center of cell table
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        for (int i = 0; i < byk_kolom; i++) {
            jTableDataset.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        // set aligment
        jTableDataset.getColumnModel().getColumn(0).setPreferredWidth(50);
        for (int i = 1; i < byk_kolom; i++) {
            jTableDataset.getColumnModel().getColumn(i).setPreferredWidth(100);
        }

        //Clear Content Table
        while (datasetTableModel.getRowCount() > 0) {
            datasetTableModel.removeRow(0);
        }

        // disabled button training
        jButtonTraining.setEnabled(false);

        Thread t = new Thread() {
            public void run() {

                BufferedImage imageInput;
                ProsesGambar imagePro;
                ArrayDataTiapFitur valueFeature;
//                int total_data_train = 25;
//                int total_data_train_jn = 13;
                
//                int total_data_train = 30;
//                int total_data_train_jn = 15;
                
                int total_data_train = 50;
                int total_data_train_jn = 24;
                
//                int total_data_train = 75;
//                int total_data_train_jn = 36;
//                
//                int total_data_train = 100;
//                int total_data_train_jn = 52;
////                
//                int total_data_train = 150;
//                int total_data_train_jn = 75;

                //final File folder = new File(path);

                for (int j = 1; j <= total_data_train; j++) {
                    try {
                        // initialization
                        String[] fileName = {""};
                        String[] ClassFile = {""};

                        if (j <= total_data_train_jn) {
                            fileName[0] = (path + "/segar".concat(Integer.toString(j).concat(".jpg")));
                            imageInput = ImageIO.read(new File(path + "/segar".concat(Integer.toString(j).concat(".jpg"))));
                            ClassFile[0] = "Segar";
                        } else {
                            fileName[0] = (path + "/tidaksegar".concat(Integer.toString(j - total_data_train_jn).concat(".jpg")));
                            imageInput = ImageIO.read(new File(path + "/tidaksegar".concat(Integer.toString(j - total_data_train_jn).concat(".jpg"))));
                            ClassFile[0] = "Tidak Segar";
                        } 
                        
                        //testingImage.getDiameterLine();

                        imagePro = dataPro.dataTraining(imageInput, ClassFile[0]);
                        valueFeature = dataPro.getDataFeature();

                        //Feature Extraction each data Image
                        jLabelDetailImageTraining.setText("Size Image : " + imagePro.getTinggi() + " x " + imagePro.getLebar());

                        jLabelImageTraining.setText("");
                        jLabelImageTraining.setIcon(new ImageIcon(imagePro.getImage().getScaledInstance(220, 210, 0)));
//                        jLabelImageTraining.setIcon(new ImageIcon(imagePro.getDiameterLine().getScaledInstance(220, 210, 0)));

                        jLabelImageGrayTraining.setText("");
                        jLabelImageGrayTraining.setIcon(new ImageIcon(imagePro.getGrayImage().getScaledInstance(200, 180, 0)));


                        // format decimal
                        DecimalFormat df = new DecimalFormat("#.###");

                        datasetTableModel.addRow(
                                new Object[]{
                            j,
                            df.format(valueFeature.red),
                            df.format(valueFeature.green),
                            df.format(valueFeature.blue),
                            ClassFile[0]});
                    } catch (IOException e) {
                        System.out.println("Data Not Found.");
                    }

                }
                jButtonTraining.setEnabled(true);
            }
        };
        t.start();       
       
        jButtonTesting.setEnabled(true);
    }//GEN-LAST:event_jButtonTrainingMouseClicked

    private void jButtonTestingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTestingMouseClicked
        // TODO add your handling code here:
        
        // disabled button testing
        jButtonTesting.setEnabled(false);
        
        //Set path to location of folder data testing
        final String path = "/home/kape/NetBeansProjects/BandengClassifier_1/Gambar/Data Testing";
        
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        chooser.setCurrentDirectory(new File(path));
        
        chooser.setFileFilter(new javax.swing.filechooser.FileFilter() {
            public final static String jpeg = "jpeg";
            public final String jpg = "jpg";
            public final String gif = "gif";
            public final String tiff = "tiff";
            public final String tif = "tif";
            public final String png = "png";

            /*Get the extension of a file.*/
            public String getExtension(java.io.File f) {
                String ext = null;
                String s = f.getName();
                int i = s.lastIndexOf('.');

                if (i > 0 && i < s.length() - 1) {
                    ext = s.substring(i + 1).toLowerCase();
                }
                return ext;
            }

            @Override
            public String getDescription() {
                return "All Images extensions (jpg, gif, tiff, tif, png)";
            }

            @Override
            public boolean accept(java.io.File f) {
                if (f.isDirectory()) {
                    return true;
                }

                String extension = getExtension(f);
                if (extension != null) {
                    return extension.equals(tiff)
                            || extension.equals(tif)
                            || extension.equals(gif)
                            || extension.equals(jpeg)
                            || extension.equals(jpg)
                            || extension.equals(png);
                }

                return false;
            }
        });

        if (chooser.showDialog(this, "  Open  ") ==  JFileChooser.APPROVE_OPTION) {
            File[] fileGambar = chooser.getSelectedFiles();
            for (File file : fileGambar) {
                String filePath = file.toString();
                                
                final ProsesGambar imageProTest;
                
                try {
                    
                    BufferedImage bimg = ImageIO.read(new File(filePath));
                    
                    testingImage.setImage(bimg);

                    System.out.println("haesil : "+ filePath);

                    jLabelImageTesting.setIcon(new ImageIcon(bimg.getScaledInstance(220, 210, 0)));

                    jLabelImageGrayTesting.setIcon(new ImageIcon(testingImage.getGrayImage().getScaledInstance(200, 180, 0)));

                    jLabelDetailImageTesting.setText("Size Image : " + testingImage.getTinggi() + " x " + testingImage.getLebar());

                    jLabelImageGrayTesting.setText("");

                    // format desimal
                    DecimalFormat df = new DecimalFormat("#.###");

                    jTextFieldvar_mean_Red_Testing.setText(df.format(testingImage.getR()));
                    jTextFieldvar_mean_Green_Testing.setText(df.format(testingImage.getG()));
                    jTextFieldvar_mean_Blue_Testing.setText(df.format(testingImage.getB()));
                    
                    System.out.println(testingImage.getR());
                    System.out.println(testingImage.getG());
                    System.out.println(testingImage.getB());
                    
                    //String hasil="";
                    String hasil = dataPro.dataTesting(testingImage.getImage());
                    ArrayList<ArrayDataPosterior> allPosterior = dataPro.getSemuaPosterior();
                    
                    //adding result to array.
                    this.arraySuegar.add(allPosterior.get(0).getProbability());
                    this.arrayTidakSuegar.add(allPosterior.get(1).getProbability());
                                        
                    //result mean segar
                    double jumlah = 0.0;
                    double meanSegar = 0.0;
                    for(int i = 0; i < arraySuegar.size(); i++){
                        jumlah = jumlah + arraySuegar.get(i);
                    } 
                    meanSegar = jumlah / arraySuegar.size();
                    //log mean segar
                    System.out.println("meanSegar :" + arraySuegar);
                    jTextFieldposterior_Class_jn.setText("" + meanSegar);

                    
                    //result mean tidaksegar
                    double result = 0.0;
                    double meanTidakSegar = 0.0;
                    for(int i = 0; i < arrayTidakSuegar.size(); i++){
                        result = result + arrayTidakSuegar.get(i);
                    } 
                    meanTidakSegar = result / arrayTidakSuegar.size();
                    //log mean tidaksegar
                    System.out.println("meanTidakSegar :" + arrayTidakSuegar);
                    jTextFieldposterior_Class_jl.setText(meanTidakSegar+"");

                    System.out.println("meanSegar :" + meanSegar);
                    System.out.println("meanTidakSegar :" + meanTidakSegar);

                    
                    //klasifikasi hasil akhir.
                    if(meanSegar > meanTidakSegar){
                        jTextFieldpredicted_class_Testing.setText("Segar");
                    } else {
                        jTextFieldpredicted_class_Testing.setText("Tidak Segar");
                    }

                    
                } catch (IOException ex) {
                    javax.swing.JOptionPane.showMessageDialog(
                            this, "File Tidak Ditemukan");
                }
            }
        }
        // enabled button testing
        jButtonTesting.setEnabled(true);
    }//GEN-LAST:event_jButtonTestingMouseClicked

    private void jTextFieldvar_mean_Green_TestingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldvar_mean_Green_TestingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldvar_mean_Green_TestingActionPerformed

    private void jTextFieldvar_mean_Blue_TestingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldvar_mean_Blue_TestingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldvar_mean_Blue_TestingActionPerformed

    private void jTextFieldactual_class_TestingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldactual_class_TestingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldactual_class_TestingActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BandengClassifier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BandengClassifier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BandengClassifier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BandengClassifier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new NaiveBayesClassifier().setVisible(true);
                BandengClassifier GUIRun = new BandengClassifier();
                Dimension sizeLayar = Toolkit.getDefaultToolkit().getScreenSize();
                Dimension sizeFrame = GUIRun.getSize();

                 if (sizeFrame.width > sizeLayar.width) {
                        sizeFrame.width = sizeLayar.width;
                    }
                    GUIRun.setLocation((sizeLayar.width - sizeFrame.width) / 2,
                            (sizeLayar.height - sizeFrame.height) / 2);
                            GUIRun.setVisible(true);                            
                GUIRun.setResizable(false);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonTesting;
    private javax.swing.JButton jButtonTraining;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDetailImageTesting;
    private javax.swing.JLabel jLabelDetailImageTraining;
    private javax.swing.JLabel jLabelImageGrayTesting;
    private javax.swing.JLabel jLabelImageGrayTraining;
    private javax.swing.JLabel jLabelImageTesting;
    private javax.swing.JLabel jLabelImageTraining;
    private javax.swing.JLabel jLabelProsesTesting;
    private javax.swing.JLabel jLabelProsesTraining;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDataset;
    private javax.swing.JLabel jTextField1;
    private javax.swing.JTextField jTextFieldactual_class_Testing;
    private javax.swing.JTextField jTextFieldposterior_Class_jl;
    private javax.swing.JTextField jTextFieldposterior_Class_jn;
    private javax.swing.JTextField jTextFieldpredicted_class_Testing;
    private javax.swing.JTextField jTextFieldvar_mean_Blue_Testing;
    private javax.swing.JTextField jTextFieldvar_mean_Green_Testing;
    private javax.swing.JTextField jTextFieldvar_mean_Red_Testing;
    // End of variables declaration//GEN-END:variables
}
